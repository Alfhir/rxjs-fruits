function _defineProperties(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function _createClass(e,n,t){return n&&_defineProperties(e.prototype,n),t&&_defineProperties(e,t),e}function _classCallCheck(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{LCGD:function(e,n,t){"use strict";t.r(n),t.d(n,"MergeModule",(function(){return C}));var a=t("tyNb"),i=function e(){_classCallCheck(this,e),this.fruits=["apple","apple","old-apple","apple","old-apple","banana","old-banana","old-banana","banana","banana"],this.expectedFruits=["apple","apple","apple","banana","banana","banana"],this.code='const apples = from(["apple",\n    "apple",\n    "old-apple",\n    "apple",\n    "old-apple"]);\n\nconst bananas = from(["banana",\n    "old-banana",\n    "old-banana",\n    "banana",\n    "banana"]);\n\nEMPTY.pipe(\n\t\n).subscribe(fruit => toConveyorBelt(fruit));\n',this.minPositionLineNumber=12,this.positionColumnNumber=1},r=t("fXoL"),o=t("VIrA"),c=t("sYmb"),s=t("ofXK"),l=t("OtPg"),b=t("uzYf");function p(e,n){if(1&e&&(r.Nb(0,"div"),r.Nb(1,"p"),r.lc(2,"Jetzt m\xfcssen wir zwei Lieferungen Zusammenfassen."),r.Mb(),r.Nb(3,"p"),r.lc(4,"Unser Fr\xfcchte Lieferant musste uns die Fr\xfcchte separat liefern. Die "),r.Nb(5,"code",4),r.lc(6,"merge"),r.Mb(),r.lc(7,"-Funktion kann unterschiedliche Observables zu einem Observable vereinen. Anschlie\xdfend k\xf6nnen wir dann mit der Pipe-Funktion, nur frische Fr\xfcchte auf das Flie\xdfband legen. "),r.Nb(8,"a",5),r.lc(9,"(Mehr Infos zu merge)"),r.Mb(),r.Mb(),r.Mb()),2&e){r.Yb();var t=r.dc(6);r.Ab(5),r.bc("appTooltip",t)}}function u(e,n){if(1&e&&(r.Nb(0,"div"),r.Nb(1,"p"),r.lc(2,"Now we have to combine two deliveries."),r.Mb(),r.Nb(3,"p"),r.lc(4,"Our fruit supplier had to deliver the fruit to us separately. The "),r.Nb(5,"code",4),r.lc(6,"merge"),r.Mb(),r.lc(7," function can combine different observables into one observable. Then we can use the pipe function to put only fresh fruit on the conveyor belt. "),r.Nb(8,"a",5),r.lc(9,"(Learn more about merge)"),r.Mb(),r.Mb(),r.Mb()),2&e){r.Yb();var t=r.dc(6);r.Ab(5),r.bc("appTooltip",t)}}var f,h,d,g=[{path:"",component:(f=function(){function e(n,t){_classCallCheck(this,e),this.exerciseService=n,this.translateService=t,this.exerciseTitle="merge",this.mergeCode="\n  const first = of(1, 2, 3)\n  const second = of(4, 5, 6);\n\n  merge(first, second).subscribe(data => console.log(data));\n\n  // Logs:\n  // 1\n  // 2\n  // 3\n  // 4\n  // 5\n  // 6\n  ",this.currentLanguage=""}return _createClass(e,[{key:"ngOnInit",value:function(){var e=this;this.exerciseService.newExercise(new i),this.currentLanguage=this.translateService.currentLang,this.onLangChangeSubscription=this.translateService.onLangChange.subscribe({next:function(){e.currentLanguage=e.translateService.currentLang}})}},{key:"ngOnDestroy",value:function(){this.onLangChangeSubscription.unsubscribe()}}]),e}(),f.\u0275fac=function(e){return new(e||f)(r.Kb(o.a),r.Kb(c.d))},f.\u0275cmp=r.Eb({type:f,selectors:[["app-merge"]],decls:11,vars:7,consts:[[4,"ngIf"],[1,"tooltip","codeTooltip"],["tooltip",""],[3,"highlight"],[1,"help",3,"appTooltip"],["href","https://rxjs.dev/api/index/function/merge","target","_blank"]],template:function(e,n){1&e&&(r.Nb(0,"h3"),r.lc(1),r.Zb(2,"translate"),r.Mb(),r.kc(3,p,10,1,"div",0),r.kc(4,u,10,1,"div",0),r.Nb(5,"div",1,2),r.Nb(7,"pre"),r.lc(8,"        "),r.Lb(9,"code",3),r.lc(10,"\n    "),r.Mb(),r.Mb()),2&e&&(r.Ab(1),r.oc("",r.ac(2,5,"EXERCISES.EXERCISETITLE"),": ",n.exerciseTitle,""),r.Ab(2),r.bc("ngIf","de"===n.currentLanguage),r.Ab(1),r.bc("ngIf","en"===n.currentLanguage),r.Ab(5),r.bc("highlight",n.mergeCode))},directives:[s.j,l.b,b.a],pipes:[c.c],styles:[""]}),f)}],m=((h=function e(){_classCallCheck(this,e)}).\u0275mod=r.Ib({type:h}),h.\u0275inj=r.Hb({factory:function(e){return new(e||h)},imports:[[a.b.forChild(g)],a.b]}),h),v=t("PCNd"),C=((d=function e(){_classCallCheck(this,e)}).\u0275mod=r.Ib({type:d}),d.\u0275inj=r.Hb({factory:function(e){return new(e||d)},imports:[[v.a,m]]}),d)}}]);